{"ast":null,"code":"var _jsxFileName = \"/Users/dhyeon/som/whatdidyoueat/client/src/MainPageView/MainCalendar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MainCalendar() {\n  _s();\n\n  const [date, setDate] = useState(new Date());\n\n  const onDateChange = day => {\n    setDate(day);\n  };\n\n  const onFormatDay = (locale, day) => formatDate(day, 'd');\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      className: \"main-calendar\",\n      onChange: onDateChange,\n      value: date,\n      formatDay: onFormatDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MainCalendar, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n\n_c = MainCalendar;\nexport default MainCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainCalendar\");","map":{"version":3,"sources":["/Users/dhyeon/som/whatdidyoueat/client/src/MainPageView/MainCalendar.js"],"names":["useState","Calendar","MainCalendar","date","setDate","Date","onDateChange","day","onFormatDay","locale","formatDate"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAIK,IAAJ,EAAD,CAAhC;;AAEA,QAAMC,YAAY,GAAGC,GAAG,IAAI;AAC1BH,IAAAA,OAAO,CAACG,GAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,CAACC,MAAD,EAASF,GAAT,KAAiBG,UAAU,CAACH,GAAD,EAAM,GAAN,CAA/C;;AAEA,sBACE;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,QAAQ,EAAED,YAFZ;AAGE,MAAA,KAAK,EAAEH,IAHT;AAIE,MAAA,SAAS,EAAEK;AAJb;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD;;GAnBQN,Y;;KAAAA,Y;AAqBT,eAAeA,YAAf","sourcesContent":["import { useState } from 'react';\nimport Calendar from 'react-calendar';\n\nfunction MainCalendar() {\n  const [date, setDate] = useState(new Date());\n\n  const onDateChange = day => {\n    setDate(day);\n  };\n\n  const onFormatDay = (locale, day) => formatDate(day, 'd');\n\n  return (\n    <>\n      <Calendar\n        className=\"main-calendar\"\n        onChange={onDateChange}\n        value={date}\n        formatDay={onFormatDay}\n      />\n    </>\n  );\n}\n\nexport default MainCalendar;\n"]},"metadata":{},"sourceType":"module"}