{"ast":null,"code":"var _jsxFileName = \"/Users/dhyeon/som/whatdidyoueat/client/src/MainPageView/MainCalendar.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from 'react-calendar';\nimport '../stylesheets/MainCalendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainCalendar = ({\n  clickedDay,\n  setClickedDay\n}) => {\n  _s();\n\n  const [dateVal, setDateVal] = useState(new Date());\n  const [postedDate, setPostedDate] = useState([]);\n\n  const onClickDay = e => {\n    console.log(`${e.getMonth() + 1}월 ${e.getDate()}일 입니다`);\n    setClickedDay(`${e.getMonth() + 1}월 ${e.getDate()}일 입니다`);\n  };\n\n  const setPostedDay = allday => {\n    console.log(allday); // console.log(view);\n\n    postedDate.map(d => {\n      if (allday.date.getDay() === d) return 'test-class';\n    });\n    return '';\n  }; // test api\n\n\n  useEffect(async () => {\n    const response = await axios.get(`http://localhost:8000/calendar/dhyeon`);\n    console.log(response);\n    setPostedDate(response.data.data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Calendar // className=\"main-calendar\"\n    , {\n      onChange: setDateVal,\n      value: dateVal,\n      maxDate: new Date(),\n      locale: \"en-US\",\n      onClickDay: onClickDay,\n      formatMonthYear: () => new Intl.DateTimeFormat('ko-KR', {\n        year: 'numeric',\n        month: 'numeric'\n      }).format(dateVal),\n      tileClassName: setPostedDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MainCalendar, \"/HmYIjvsmpTsONHXwPncsUdrW/I=\");\n\n_c = MainCalendar;\nexport default MainCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainCalendar\");","map":{"version":3,"sources":["/Users/dhyeon/som/whatdidyoueat/client/src/MainPageView/MainCalendar.js"],"names":["useState","useEffect","axios","Calendar","MainCalendar","clickedDay","setClickedDay","dateVal","setDateVal","Date","postedDate","setPostedDate","onClickDay","e","console","log","getMonth","getDate","setPostedDay","allday","map","d","date","getDay","response","get","data","Intl","DateTimeFormat","year","month","format"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,iCAAP;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAmC;AAAA;;AACtD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAAtC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMY,UAAU,GAAGC,CAAC,IAAI;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,CAAC,CAACG,QAAF,KAAe,CAAE,KAAIH,CAAC,CAACI,OAAF,EAAY,OAAhD;AACAX,IAAAA,aAAa,CAAE,GAAEO,CAAC,CAACG,QAAF,KAAe,CAAE,KAAIH,CAAC,CAACI,OAAF,EAAY,OAArC,CAAb;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAGC,MAAM,IAAI;AAC7BL,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ,EAD6B,CAE7B;;AACAT,IAAAA,UAAU,CAACU,GAAX,CAAeC,CAAC,IAAI;AAClB,UAAIF,MAAM,CAACG,IAAP,CAAYC,MAAZ,OAAyBF,CAA7B,EAAgC,OAAO,YAAP;AACjC,KAFD;AAGA,WAAO,EAAP;AACD,GAPD,CATsD,CAkBtD;;;AACApB,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMuB,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAW,uCAAX,CAAvB;AAEAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AACAb,IAAAA,aAAa,CAACa,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAb;AACD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAA,2BACE,QAAC,QAAD,CACE;AADF;AAEE,MAAA,QAAQ,EAAElB,UAFZ;AAGE,MAAA,KAAK,EAAED,OAHT;AAIE,MAAA,OAAO,EAAE,IAAIE,IAAJ,EAJX;AAKE,MAAA,MAAM,EAAC,OALT;AAME,MAAA,UAAU,EAAEG,UANd;AAOE,MAAA,eAAe,EAAE,MACf,IAAIe,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAC/BC,QAAAA,IAAI,EAAE,SADyB;AAE/BC,QAAAA,KAAK,EAAE;AAFwB,OAAjC,EAGGC,MAHH,CAGUxB,OAHV,CARJ;AAaE,MAAA,aAAa,EAAEW;AAbjB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBD,CA7CD;;GAAMd,Y;;KAAAA,Y;AA+CN,eAAeA,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from 'react-calendar';\nimport '../stylesheets/MainCalendar.css';\n\nconst MainCalendar = ({ clickedDay, setClickedDay }) => {\n  const [dateVal, setDateVal] = useState(new Date());\n  const [postedDate, setPostedDate] = useState([]);\n\n  const onClickDay = e => {\n    console.log(`${e.getMonth() + 1}월 ${e.getDate()}일 입니다`);\n    setClickedDay(`${e.getMonth() + 1}월 ${e.getDate()}일 입니다`);\n  };\n\n  const setPostedDay = allday => {\n    console.log(allday);\n    // console.log(view);\n    postedDate.map(d => {\n      if (allday.date.getDay() === d) return 'test-class';\n    });\n    return '';\n  };\n\n  // test api\n  useEffect(async () => {\n    const response = await axios.get(`http://localhost:8000/calendar/dhyeon`);\n\n    console.log(response);\n    setPostedDate(response.data.data);\n  }, []);\n\n  return (\n    <>\n      <Calendar\n        // className=\"main-calendar\"\n        onChange={setDateVal}\n        value={dateVal}\n        maxDate={new Date()}\n        locale=\"en-US\"\n        onClickDay={onClickDay}\n        formatMonthYear={() =>\n          new Intl.DateTimeFormat('ko-KR', {\n            year: 'numeric',\n            month: 'numeric',\n          }).format(dateVal)\n        }\n        tileClassName={setPostedDay}\n      />\n    </>\n  );\n};\n\nexport default MainCalendar;\n"]},"metadata":{},"sourceType":"module"}