{"ast":null,"code":"var _jsxFileName = \"/Users/dhyeon/som/whatdidyoueat/client/src/MainPageView/MainCalendar.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from 'react-calendar';\nimport '../stylesheets/MainCalendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainCalendar = ({\n  clickedDay,\n  setClickedDay\n}) => {\n  _s();\n\n  const [dateVal, setDateVal] = useState(new Date());\n  const [postedDate, setPostedDate] = useState([]);\n\n  const onClickDay = e => {\n    console.log(`${e.getMonth() + 1}월 ${e.getDate()}일 입니다`);\n    setClickedDay(`${e.getMonth() + 1}월 ${e.getDate()}일 입니다`);\n  };\n\n  const setPostedDay = allday => {\n    // console.log(view);\n    console.log(allday.activeStartDate.getMonth());\n    if (postedDate.find(d => d === allday.date.getDate() && allday.activeStartDate.getMonth() === allday.date.getMonth())) return 'calendal--posted-date';\n    return '';\n  }; // test api\n\n\n  useEffect(async () => {\n    const response = await axios.get(`http://localhost:8000/calendar/dhyeon`);\n    console.log(response.data.data);\n    setPostedDate(response.data.data);\n  }, []);\n\n  const testFormat = t => {\n    console.log(t);\n    console.log(t);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Calendar // className=\"main-calendar\"\n    , {\n      onChange: setDateVal,\n      value: dateVal,\n      maxDate: new Date(),\n      locale: \"en-US\",\n      onClickDay: onClickDay // formatMonthYear={() =>\n      //   new Intl.DateTimeFormat('ko-KR', {\n      //     year: 'numeric',\n      //     month: 'numeric',\n      //   }).format(dateVal)\n      // }\n      ,\n      formatMonthYear: testFormat,\n      tileClassName: setPostedDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MainCalendar, \"/HmYIjvsmpTsONHXwPncsUdrW/I=\");\n\n_c = MainCalendar;\nexport default MainCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainCalendar\");","map":{"version":3,"sources":["/Users/dhyeon/som/whatdidyoueat/client/src/MainPageView/MainCalendar.js"],"names":["useState","useEffect","axios","Calendar","MainCalendar","clickedDay","setClickedDay","dateVal","setDateVal","Date","postedDate","setPostedDate","onClickDay","e","console","log","getMonth","getDate","setPostedDay","allday","activeStartDate","find","d","date","response","get","data","testFormat","t"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,iCAAP;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAmC;AAAA;;AACtD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAAtC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMY,UAAU,GAAGC,CAAC,IAAI;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEF,CAAC,CAACG,QAAF,KAAe,CAAE,KAAIH,CAAC,CAACI,OAAF,EAAY,OAAhD;AACAX,IAAAA,aAAa,CAAE,GAAEO,CAAC,CAACG,QAAF,KAAe,CAAE,KAAIH,CAAC,CAACI,OAAF,EAAY,OAArC,CAAb;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAGC,MAAM,IAAI;AAC7B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACC,eAAP,CAAuBJ,QAAvB,EAAZ;AACA,QACEN,UAAU,CAACW,IAAX,CACEC,CAAC,IACCA,CAAC,KAAKH,MAAM,CAACI,IAAP,CAAYN,OAAZ,EAAN,IACAE,MAAM,CAACC,eAAP,CAAuBJ,QAAvB,OAAsCG,MAAM,CAACI,IAAP,CAAYP,QAAZ,EAH1C,CADF,EAOE,OAAO,uBAAP;AACF,WAAO,EAAP;AACD,GAZD,CATsD,CAuBtD;;;AACAf,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMuB,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAW,uCAAX,CAAvB;AAEAX,IAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACE,IAAT,CAAcA,IAA1B;AACAf,IAAAA,aAAa,CAACa,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAb;AACD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACtBd,IAAAA,OAAO,CAACC,GAAR,CAAYa,CAAZ;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYa,CAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,QAAD,CACE;AADF;AAEE,MAAA,QAAQ,EAAEpB,UAFZ;AAGE,MAAA,KAAK,EAAED,OAHT;AAIE,MAAA,OAAO,EAAE,IAAIE,IAAJ,EAJX;AAKE,MAAA,MAAM,EAAC,OALT;AAME,MAAA,UAAU,EAAEG,UANd,CAOE;AACA;AACA;AACA;AACA;AACA;AAZF;AAaE,MAAA,eAAe,EAAEe,UAbnB;AAcE,MAAA,aAAa,EAAET;AAdjB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD,CAxDD;;GAAMd,Y;;KAAAA,Y;AA0DN,eAAeA,YAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Calendar from 'react-calendar';\nimport '../stylesheets/MainCalendar.css';\n\nconst MainCalendar = ({ clickedDay, setClickedDay }) => {\n  const [dateVal, setDateVal] = useState(new Date());\n  const [postedDate, setPostedDate] = useState([]);\n\n  const onClickDay = e => {\n    console.log(`${e.getMonth() + 1}월 ${e.getDate()}일 입니다`);\n    setClickedDay(`${e.getMonth() + 1}월 ${e.getDate()}일 입니다`);\n  };\n\n  const setPostedDay = allday => {\n    // console.log(view);\n    console.log(allday.activeStartDate.getMonth());\n    if (\n      postedDate.find(\n        d =>\n          d === allday.date.getDate() &&\n          allday.activeStartDate.getMonth() === allday.date.getMonth(),\n      )\n    )\n      return 'calendal--posted-date';\n    return '';\n  };\n\n  // test api\n  useEffect(async () => {\n    const response = await axios.get(`http://localhost:8000/calendar/dhyeon`);\n\n    console.log(response.data.data);\n    setPostedDate(response.data.data);\n  }, []);\n\n  const testFormat = t => {\n    console.log(t);\n    console.log(t);\n  };\n\n  return (\n    <>\n      <Calendar\n        // className=\"main-calendar\"\n        onChange={setDateVal}\n        value={dateVal}\n        maxDate={new Date()}\n        locale=\"en-US\"\n        onClickDay={onClickDay}\n        // formatMonthYear={() =>\n        //   new Intl.DateTimeFormat('ko-KR', {\n        //     year: 'numeric',\n        //     month: 'numeric',\n        //   }).format(dateVal)\n        // }\n        formatMonthYear={testFormat}\n        tileClassName={setPostedDay}\n      />\n    </>\n  );\n};\n\nexport default MainCalendar;\n"]},"metadata":{},"sourceType":"module"}